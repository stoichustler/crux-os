#!/bin/sh
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Copyright Â© 2020 Keith Packard
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

# select the program
elf="$1"
shift

archstring=""
readelf="arc-zephyr-elf-readelf"
# If readelf is installed, we can use the attributes
# in the file to determine the target cpu
if command -v "$readelf" >/dev/null 2>/dev/null; then
    # LLVM-based toolchains readelf produces different output from GNU, so
    # check --version output first.
    if "$readelf" --version | grep LLVM >/dev/null; then
        archstring=$("$readelf" --arch-specific "$elf" | grep "Value: rv" | cut -d: -f2)
    else
        archstring=$("$readelf" --arch-specific "$elf" | grep Tag_ARC_CPU_name | cut -d: -f2 | tr -d '" ')
    fi
    isaconfig=$("$readelf" --arch-specific "$elf" | grep Tag_ARC_ISA_config | cut -d: -f2 | tr -d '" ')
fi
if [ -z "$archstring" ]; then
    echo "Could not determine architecture for $elf, is readelf installed?" >&2
    exit 77
fi

cpu=$archstring

case "$cpu" in
    hs5*)
        qemu=qemu-system-arc
        cpu=hs5x
        ;;
    hs6x|fpud)
        qemu=qemu-system-arc64
        ;;
    arc700|arc600|nps400)
        echo "unsupported cpu $cpu"
        exit 77
        ;;
    arcem)
        case "$isaconfig" in
            *DPFP*|*SPFP*|*FPUS*|*FPUDA*)
                echo "arcem with FPU is not complete"
                exit 77
                ;;
        esac
        qemu=qemu-system-arc
        cpu=arcem
        ;;
    archs)
        case "$isaconfig" in
            *FPU*)
                echo "archs with FPU is not complete"
                exit 77
                ;;
        esac
        qemu=qemu-system-arc
        cpu=archs
        ;;
    *)
        qemu=qemu-system-arc
        ;;
esac

# Map stdio to a multiplexed character device so we can use it
# for the monitor and semihosting output

chardev=stdio,mux=on,id=stdio0

cmdline="program-name"
input=""
done=0

while [ "$done" != "1" ]; do
    case "$1" in
        --)
            shift
            done=1
            ;;
        -s|"")
            done=1
            ;;
        *)
            cmdline="$cmdline $1"
            case "$input" in
                "")
                    input="$1"
                    ;;
                *)
                    input="$input $1"
                    ;;
            esac
            shift
            ;;
    esac
done

# Point the semihosting driver at our new chardev

semi=enable=on,chardev=stdio0,arg="$cmdline"

# Disable monitor

mon=none

# Point serial port at the new chardev

#serial=none

serial=chardev:stdio0

echo "$input" | $qemu -chardev $chardev -semihosting-config "$semi" -monitor "$mon" -serial "$serial" -cpu $cpu -machine arc-sim -nographic -kernel "$elf" -nic none "$@"
#gdb -fullname -args $qemu -chardev $chardev -semihosting-config "$semi" -monitor "$mon" -serial "$serial" -cpu $cpu -nographic -kernel "$elf" -nic none -machine arc-sim "$@"
